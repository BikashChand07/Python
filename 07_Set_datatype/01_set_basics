#set datatype
#set is mutable datastructure => can be changed once declared 
s={1,2,3,4,5}
#print(s,type(s))
s={'ram',1,(7,8,9),4.5}
print(s) # {'ram', 4.5, 1, (7, 8, 9)} : therefore set is a unordered collection.

t={1,2,'ram',2,'hari',(1,2),'ram',(2,1)}
print(t)# {1, 2, (1, 2), (2, 1), 'ram', 'hari'} :therefore set is a unique collection

#q={1,2,[4,5],("ram", "shyam")}
#print(q) # it will throw error because set cannot store mutable/unhasable data structure , here it stores [4,5] which is list(mutbale) so error occurs

empty_string=''#str()
empty_list=[] #list()
empty_tuple=()#tuple
empty_dict={}#dictionary
empty_set=set()#set

#removing varaibales 
#set="ram" 
#del set # it will delete set variable

#set operation
tea = {'ram','shyam','sita'}
coffee = {'hari','krishna','durga'}

#union
#tea_or_coffee=tea|coffee # union(|) or union() method
print(tea_or_coffee)
tea_or_coffee = tea.union(coffee)

#intersection
tea_and_coffee = tea & coffee
print(tea_and_coffee) # it will return empty set ie set() because there is no common element between tea and coffee
tea_and_coffee = tea.intersection(coffee) #this will also do intersection

#difference :
#tea - coffee  or tea.difference(coffee) ie tea only
#coffee-tea or coffee.difference(tea) ie coffee only

#symmetric difference: symmetric_difference() method :remove common elements then combine
t={1,2,4,5}
r={2,3,4,6,7}
print(t.symmetric_difference(r)) # {1, 3, 5, 6, 7}

#add data to the set
t.add(10) #add() method add single data
t.add((22,11,)) #adding tuple
t.update((77,33,222)) # adding multiple data
print(t)

#remove
t.remove(77) #if 77 is not found it will throw error
print(t)

#discard
t.discard(10)# same as remove but if 10 is not found than it will not throw error
print(t)

#pop
print(t.pop()) # takes out random data from set

#clear all the data
#t.clear()